FROM resin/%%RESIN_MACHINE_NAME%%-node:slim

## uncomment if you want systemd
ENV INITSYSTEM on

# Install apt dependencies
RUN apt-get clean && apt-get update && apt-get install -y \
  wget \
  curl

# Add apt source of the foundation repository
# We need this source because bluez needs to be patched in order to work with rpi3 ( Issue #1314: How to get BT working on Pi3B. by clivem in raspberrypi/linux on GitHub )
# Add it on top so apt will pick up packages from there
RUN sed -i '1s#^#deb http://archive.raspberrypi.org/debian jessie main\n#' /etc/apt/sources.list

# Add the key for foundation repository
RUN wget http://archive.raspberrypi.org/debian/raspberrypi.gpg.key -O - | sudo apt-key add -

# Install apt dependencies
RUN apt-get clean && apt-get update && apt-get install -y \
  apt-utils \
  build-essential \
  python-dev \
  python-pip \
  ruby-dev \
  bison \
  golang \
  libfontconfig \
  rpm \
  bluetooth \
  bluez \
  bluez-firmware \
  libbluetooth-dev \
  libudev-dev \
  libdbus-1-dev \
  libexpat-dev && rm -rf /var/lib/apt/lists/*

# InfluxDB
RUN wget https://raw.githubusercontent.com/curcuz/agile-ui-berlindemo/master/Dockerbin/influxdb_0.9.6.1_armhf.deb && dpkg -i influxdb_0.9.6.1_armhf.deb && rm influxdb_0.9.6.1_armhf.deb

# Telegraf
RUN wget https://raw.githubusercontent.com/curcuz/agile-ui-berlindemo/master/Dockerbin/telegraf_0.3.0-beta2_armhf.deb && dpkg -i telegraf_0.3.0-beta2_armhf.deb && rm telegraf_0.3.0-beta2_armhf.deb

# Grafana
RUN wget https://raw.githubusercontent.com/curcuz/agile-ui-berlindemo/master/Dockerbin/grafana_2.6.0_armhf.deb && dpkg -i grafana_2.6.0_armhf.deb && rm grafana_2.6.0_armhf.deb

# Disable bluetooth service - we will manually start it later
RUN systemctl disable bluetooth

# Update grafana config
COPY ./Dockerbin/grafana.ini /etc/grafana/grafana.ini
COPY ./Dockerbin/grafana-server.service /usr/lib/systemd/system/grafana-server.service

# Start services on boot
RUN systemctl enable influxdb && systemctl enable telegraf && systemctl enable grafana-server

# Install PM2
RUN JOBS=MAX npm i pm2 -g

# Install PM2 log-rotate
RUN pm2 install pm2-logrotate && pm2 set pm2-logrotate:interval_unit 'DD' && pm2 set pm2-logrotate:retain 3 && pm2 startup

# resin-sync will always sync to /usr/src/app, so code needs to be here.
WORKDIR /usr/src/app

# copy app/ directory into WORKDIR
COPY app/ ./

# NPM i app
RUN npm i  --prefix /usr/src/app

# Move app to filesystem
COPY app/ /usr/src/app/

# Recursively npm install for each module found
RUN cd /usr/src/app && chmod +x npm_i_modules.sh && /bin/bash npm_i_modules.sh

# Start app
CMD ["bash", "/usr/src/app/start.sh"]
